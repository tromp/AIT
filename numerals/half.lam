let
  id = \x.x;
  0 = \f\x.x;
  succ = \n\f\x.f (n f x);
  1 = succ 0;
  2 = succ 1;
  3 = succ 2;
  4 = succ 3;
  5 = succ 4;
  6 = succ 5;
  false = 0;
  half  = \n\s\z. n (\c\a\b. c (s b) a) false z z -- 55 bits
  -- this generalizes as e.g.
  -- third = \n\s\z. n (\r\a\b\c. r (s c) a b) (\_.false) z z z; -- 71 bits
in half
