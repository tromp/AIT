-- Busy Beaver BBλ_Ξ for lambda calculus with a recursive normal form size oracle: the maximum beta/oracle normal form size of any 1-closed lambda term of size n, or 0 if no 1-closed term of size n exists.
-- A 1-closed term is a term in de Bruijn notation that is closed with 1 additional lambda in front. Any variable bound to that lambda is a free variable "f" in the term.
-- In normal order reduction, an oracle reduction step reduces f t to True (λλ2) if t is well-founded and has a beta/oracle normal form, or to False (λλ1) otherwise.
-- A term is well-founded if its (leftmost, outermost) oracle calls can only nest finitely deep.
-- n SKsucc SK0 is a Church list of all 3^2^n balanced SKf terms of rank n (idea courtesy of @bee)
-- bb n, of size 168 + K(n), maps SKnf over that, replacing all elements without normal form with f,
-- resulting in a normal form whose size exceeds that of all rank n SKf terms.
-- Thus, BBλ_Ξ(n) easily exceeds any BBλ_α(n) for n somewhat larger than K(α).

\nf. let
  S = \x\y\z.x z(y z);
  K = \x\y.x;
  C0 = \f\x. x;
  C1 = \f\x. f x;
  C2 = \f\x. f (f x);
  C3 = \f\x. f (f (f x));
  map = \f\xs\c. xs (\x.c (f x));
  cat = \xs\ys\c\n. xs c (ys c n);
  nil = \c\n. n;
  bind = \xs\f. xs (\x. cat (f x)) nil;
  SK0 = \c\n. c S (c K (c nf n));
  SKsucc = \xs. bind xs (\x. map x xs);
  SKnf = \x. nf x x nf;
  bb = \n. map SKnf (n SKsucc SK0)
in bb
